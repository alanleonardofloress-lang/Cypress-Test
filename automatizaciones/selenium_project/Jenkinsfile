pipeline {
    agent any

    options {
        ansiColor('xterm')
    }

    environment {
        LC_ALL = 'C.UTF-8'
        LANG   = 'C.UTF-8'
        PROJECT_DIR = "${WORKSPACE}\\automatizaciones\\selenium_project"
        PYTHON_EXE = "venv\\Scripts\\python.exe"
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/alanleonardofloress-lang/Cypress-Test.git'
            }
        }

        stage('Configurar entorno Python') {
            steps {
                dir('automatizaciones/selenium_project') {
                    bat '''
                        echo Creando entorno virtual...
                        python -m venv venv

                        echo Actualizando pip...
                        venv\\Scripts\\python.exe -m pip install --upgrade pip

                        echo Instalando dependencias...
                        venv\\Scripts\\python.exe -m pip install -r requirements.txt

                        echo Verificando instalación de Selenium...
                        venv\\Scripts\\python.exe -m pip show selenium || echo Selenium no encontrado
                    '''
                }
            }
        }

        stage('Ejecutar test Selenium') {
            steps {
                dir('automatizaciones/selenium_project') {
                    script {
                        echo "Ejecutando test Bantotal..."

                        // Verificar que el archivo de credenciales exista antes de correr el test
                        bat "if not exist selenium_local\\helpers\\credentials.json echo ERROR: No se encontró credentials.json && exit /b 1"

                        // Ejecutar el test y capturar el código de salida
                        def result = bat(
                            script: "${env.PYTHON_EXE} selenium_local\\test_bantotal.py > log_bantotal.txt 2>&1",
                            returnStatus: true
                        )

                        // Verificar el resultado del test
                        if (result != 0) {
                            echo "El test de Selenium falló con código ${result}. Revisar log_bantotal.txt"
                            error("El test falló. Ver detalles en el log.")
                        } else {
                            echo "Test Selenium ejecutado correctamente."
                        }

                        // Mostrar log en consola
                        bat "type log_bantotal.txt"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline Selenium finalizado con éxito.'
        }
        failure {
            echo 'Pipeline Selenium falló. Revisar logs.'
        }
        always {
            echo 'Archivando artifacts...'
            archiveArtifacts artifacts: '**/selenium_project/**/*.png', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/selenium_project/**/*.log', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/selenium_project/log_bantotal.txt', allowEmptyArchive: true
        }
    }
}