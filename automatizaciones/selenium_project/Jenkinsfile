pipeline {
    agent any

    options {
        ansiColor('xterm')
    }

    environment {
        LC_ALL = 'C.UTF-8'
        LANG   = 'C.UTF-8'
        PROJECT_DIR = "${WORKSPACE}\\automatizaciones\\selenium_project"
        PYTHON_EXE = "venv\\Scripts\\python.exe"
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/alanleonardofloress-lang/Cypress-Test.git'
            }
        }

        stage('Configurar entorno Python') {
            steps {
                dir('automatizaciones/selenium_project') {
                    bat '''
                        echo Creando entorno virtual...
                        python -m venv venv

                        echo Actualizando pip...
                        venv\\Scripts\\python.exe -m pip install --upgrade pip

                        echo Instalando dependencias...
                        venv\\Scripts\\python.exe -m pip install -r requirements.txt

                        echo Verificando instalaci√≥n de Selenium...
                        venv\\Scripts\\python.exe -m pip show selenium || echo Selenium no encontrado
                    '''
                }
            }
        }

        stage('Ejecutar test Selenium') {
            steps {
                dir('automatizaciones/selenium_project') {
                    // üëá Usa la credencial de Jenkins y la copia antes de ejecutar el test
                    withCredentials([file(credentialsId: 'google-sheets-cred', variable: 'GOOGLE_CRED')]) {
                        bat """
                            echo Copiando credencial segura desde Jenkins...
                            copy "%GOOGLE_CRED%" "selenium_local\\helpers\\credentials.json" /Y

                            echo Ejecutando test Bantotal...
                            ${env.PYTHON_EXE} selenium_local\\test_bantotal.py > log_bantotal.txt 2>&1

                            echo Verificando resultado del test...
                            if errorlevel 1 (
                                echo El test de Selenium fall√≥. Revisar log_bantotal.txt
                                exit /b 1
                            ) else (
                                echo Test Selenium ejecutado correctamente.
                            )

                            echo Mostrando log...
                            type log_bantotal.txt
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline Selenium finalizado con √©xito.'
        }
        failure {
            echo 'Pipeline Selenium fall√≥. Revisar logs.'
        }
        always {
            echo 'Archivando artifacts...'
            archiveArtifacts artifacts: '**/selenium_project/**/*.png', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/selenium_project/**/*.log', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/selenium_project/log_bantotal.txt', allowEmptyArchive: true
        }
    }
}